[%
import 'utilities.eol';

operation EModelElement getOptional(isUnion : Boolean) : String {
	if (self.getAnnotationValue("doc", "optional") == "true") {
		return "optional";
	}
	if (isUnion) {
		return "optional";
	}
	else {
		return "required";
	}
}

operation EOperation getAuth() : String {
	if (self.getAnnotationValue("doc", "auth") == "false") {
		return "No";
	}
	return "Yes";
}

operation EOperation getStream() : String {
	if (self.isStream()) {
		return " (stream)";
	}
	return "";
}

operation EModelElement getDoc() : String {
	var doc = self.getAnnotationValue("doc", "d").trim();
	if (doc.isDefined() and not doc.endsWith(".")) {
		doc = doc + ".";
	}
	return doc;
}

operation EModelElement getNum() : Integer {
	var num = self.getAnnotationValue("thrift", "n");
	if (num.isDefined and num.isInteger()) {
		return num.asInteger();
	}
	else {
		return 0;
	}
}

operation EClassifier getEntityType() {
  if (self.isException()) {
    return "Exception";
  } else if (self.isUnion()) {
    return "Union";
  } else {
    return "Entity";
  }
}

operation EClassifier getEntityThriftKeyword() {
  if (self.isException()) {
    return "exception";
  } else if (self.isUnion()) {
    return "union";
  } else {
    return "struct";
  }
}

operation EClassifier usedIn() {
	return EOperation.all.select(op|op.eType = self or op.eParameters.exists(p|p.eType == self) or op.eExceptions.contains(self)).
			collect(op|op.eContainer.name + "." + op.name).
			includingAll(EClass.all.select(c|c.eStructuralFeatures.exists(sf|sf.eType = self)).collect(c|c.name));
}

operation EModelElement isExcluded() {
	return self.getAnnotationValue("doc", "exclude") == "true";
}

operation EClassifier isException() {
    return EOperation.all.exists(op|op.eExceptions.contains(self)) or self.getAnnotationValue("doc", "exception") == "true";
}

operation EClassifier isUnion() {
    return self.getAnnotationValue("thrift", "union") == "true";
}

operation EOperation isStream() {
	return self.getAnnotationValue("doc", "stream") == "true";
}

operation EPackage getJavaNamespace() : String {
  var ann = self.getAnnotationValue("thrift", "javans");
  if (ann.isDefined()) {
    return ann;
  } else {
    return self.nsURI;
  }
}

@cached
operation EClass computeDepth() : Integer {
	if (self.~depthVisiting.isDefined()) {
	  -- Avoid cyclic references
	  return -1;
	}

	var curDeepestChild = -1;
	self.~depthVisiting = true;
	for (sf in self.eAllStructuralFeatures.collect(c | c.getEType).collect(c : EClass | c)) {
		var childDepth = sf.computeDepth();
		if (childDepth > curDeepestChild) {
			curDeepestChild = childDepth;
		} 
	}
	delete self.~depthVisiting;
	
	return curDeepestChild + 1;
}

/*
 * Generates Thrift code for an entity or an exception.
 */
operation describeEntity(c: EClass) {
    describeEntityFields(c, 1);
}

operation describeEntityFields(c: EClass, iParameter: Integer): Integer {
	for (sf in c.eAllStructuralFeatures) {
		if (sf.getNum() > iParameter) {
			iParameter = sf.getNum();
		}
		if (sf.isMerged()) {
			iParameter = describeEntityFields(sf.eType, iParameter);
		} else {
   %]
	 /* [%=sf.getDoc()%] */ [%=iParameter%]: [%=sf.getOptional(c.isUnion()) %] [%=sf.getType()%] [%=sf.name%],
[% iParameter = iParameter + 1;
		}
	}
	return iParameter;
}
%]