[%
operation EModelElement getOptional() : String {
	if (self.getAnnotationValue("doc", "optional") == "true") {
		return " (optional)";
	}
	return "";
}

operation EOperation getAuth() : String {
	if (self.getAnnotationValue("doc", "auth") == "false") {
		return "No";
	}
	return "Yes";
}

operation EOperation getStream() : String {
	if (self.isStream()) {
		return " (stream)";
	}
	return "";
}

operation EModelElement getDoc() : String {
	var doc = self.getAnnotationValue("doc", "d").trim();
	if (doc.isDefined() and not doc.endsWith(".")) {
		doc = doc + ".";
	}
	return doc;
}

operation ETypedElement getType() : String {
	if (self.eType.isDefined()) {
		var type = self.eType.name;
		if (type == "EString") type = "string";
		else if (type == "EInt") type = "int32";
		else if (type == "EBoolean") type = "bool";
		else if (type == "ELong") type = "long64";
		if (self.isMany()) {
			type = "list<" + type + ">";
		}
		return type;
	}
	else return "void";
}

operation EClassifier getEntityType() {
  if (self.isException()) {
    return "Exception";
  } else {
    return "Entity";
  }
}

operation EClassifier usedIn() {
	return EOperation.all.select(op|op.eType = self or op.eParameters.exists(p|p.eType == self) or op.eExceptions.contains(self)).
			collect(op|op.eContainer.name + "." + op.name).
			includingAll(EClass.all.select(c|c.eStructuralFeatures.exists(sf|sf.eType = self)).collect(c|c.name));
}

operation EModelElement isExcluded() {
	return self.getAnnotationValue("doc", "exclude") == "true";
}

operation EClassifier isException() {
    return EOperation.all.exists(op|op.eExceptions.contains(self)) or self.getAnnotationValue("doc", "exception") == "true";
}

operation EOperation isStream() {
	return self.getAnnotationValue("doc", "stream") == "true";
}

operation EModelElement getAnnotationValue(name : String, detail : String) : Any {
	var ann := self.eAnnotations.selectOne(a|a.source = name);
	var det;
	
	if (ann.isDefined()) {
		det := ann.details.selectOne(d|d.key = detail);
	}
	
	if (det.isDefined()) {
		return det.value;
	}
	else {
		return "";
	}
	return det;	
}

/*
 * Generates LaTeX code for an entity or an exception.
 */
operation describeEntity(c: EClass) {
   for (sf in c.eAllStructuralFeatures.sortBy(f|f.name)) { %]
	 /* [%=sf.getDoc()%] */ 1: [%=sf.getType() + sf.getOptional()%] [%=sf.name%],
[% }
}
%]