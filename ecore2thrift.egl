[% import 'utilities.egl'; %]

% WARNING: This is an auto-generated file. Do not modify manually.
\makeatletter
  \newcommand{\camelhyph}[1]{\@fterfirst\c@amelhyph#1\relax }
  \def\@fterfirst #1#2{#2#1}
  \def\c@amelhyph #1{%
   \ifthenelse{\equal{#1}\relax}{}{%  Do nothing if the end has been reached
     \ifnum`#1<91 \-#1\else#1\fi%     Check whether #1 is an uppercase letter,
                                %     if so, print \-#1, otherwise #1
    \expandafter\c@amelhyph%    %     insert \c@amelhyph again.
}}
\makeatother

\newcommand{\camelcase}[1]{\camelhyph{#1}\xspace}

\subsection{Services}
\label{sec:services}

[%=EPackage.all.first.getAnnotationValue("doc", "dServices")%]

[%for (c in EClass.all.select(c|not c.eOperations.isEmpty())) { %]
\subsubsection{[%=c.name%]}
\label{sec:[%=c.name%]}
[%=c.getDoc()%]

[%for (op in c.eOperations) { %]
\begin{longtable} {|p{2cm}|p{3.5cm}|p{2.5cm}|p{6.5cm}|}
	\caption{Operation [%=c.name%].[%=op.name%]}
	\label{tab:[%=c.name.ftlc()%]-[%=op.name%]}\\
	\hline%
	Auth: [%=op.getAuth()%] & \textbf{Name} & \textbf{Type} & \textbf{Documentation} \\\hline 
	\textbf{Operation} & \camelcase{[%=op.name%]} & [%=op.getType()%] [%=op.getStream()%] & [%=op.getDoc()%] \\\hline
	\textbf{Parameter}s & & & \\\hline
	[%for (p in op.eParameters) { %]
	 & [%=p.name.escapeLaTeX()%] [%=p.getOptional()%]& [%=p.getType()%] & [%=p.getDoc()%] \\\hline 
	[%}
	if (op.eExceptions.size > 0) { %]
	\textbf{Exception}s & & & \\\hline
	[% for (e in op.eExceptions) { %]
	 & \camelcase{[%=e.name.escapeLaTeX()%]} & \multicolumn{2}{p{8.5cm}|}{[%=e.getDoc()%]} \\\hline 
	[% }
	} %]
\end{longtable}
[%}%]

[%}%]

\subsection{Entities}
\label{sec:entities}
[%for (c in EClass.all.select(c|c.eOperations.isEmpty() and not c.isExcluded() and not c.isException()).sortBy(c|c.name)) { %]
\subsubsection{[%=c.name%]}

[% describeEntity(c); %]

[%} /* for (c in EClass... */ %]

[% if (EEnum.all.size() > 0) { %]

\subsection{Enumerations}
\label{sec:enumerations}
[% for (c in EEnum.all.select(c|not c.isExcluded()).sortBy(c|c.name)) { %]
\subsubsection{[%=c.name%]}

\begin{longtable} {|p{4cm}|p{10.5cm}|}
	\caption{Enumeration [%=c.name%]}
	\label{tab:[%=c.name.ftlc()%]}\\
	\hline%
	\textbf{Name} & \textbf{Documentation} \\\hline 
	[% for (l in c.eLiterals.sortBy(l|l.name)) { %]
		[%=l.name.escapeLaTeX()%] & [%=l.getDoc()%] \\\hline 
	[% } %]
	[%=c.getUsedIn()%]
\end{longtable}

[% } /* for (c in EClass... */
} /* if (EEnum... */

var exceptions = EClass.all.select(c|c.eOperations.isEmpty() and not c.isExcluded() and c.isException()).sortBy(c|c.name);
if (exceptions.size() > 0) {
%]
\subsection{Exceptions}
\label{sec:exceptions}
[% for (c in exceptions) { %]
\subsubsection{[%=c.name%]}
[% describeEntity(c); %]
[% } /* for */
} /* if (exceptions ... */


%]